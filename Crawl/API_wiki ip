from urllib.error import HTTPError
from urllib.request import urlopen
from bs4 import BeautifulSoup
import json
import datetime
import random
import re

random.seed(datetime.datetime.now())
def getLinks(articleUrl):
    html = urlopen('http://en.wikipedia.org{}'.format(articleUrl))
    bs = BeautifulSoup(html,'html.parser')
    return bs.find('div',{'id':'bodyContent'}).findAll('a',href=re.compile('^(/wiki/)((?!:).)*$'))

def getHistoryIPs(pageUrl):
    pageUrl = pageUrl.replace('/wiki/','')
    historyUrl = 'http://en.wikipedia.org/w/index.php?title='
    historyUrl += pageUrl + '&action=history'
    print('history url is: {}'.format(historyUrl))

    html = urlopen(historyUrl)
    bs = BeautifulSoup(html,'html.parser')
    ipAddresses = bs.findAll('a',{'class':'mw-anonuserlink'})
    addressList = set()
    for ipAddress in ipAddresses:
        addressList.add(ipAddress.get_text())
    return addressList

def getCountry(ipAddress):
    try:
        url = f'http://api.ipstack.com/{ipAddress}?access_key={your_api_access_key}'
        response = urlopen(url).read().decode('utf-8')
    except HTTPError:
        return None
    responseJson = json.loads(response)
    return responseJson.get('country_code')

links = getLinks('/wiki/Programming_paradigm')

while(len(links)>0):
    for link in links:
        print('-'*20)
        historyIPs = getHistoryIPs(link.attrs['href'])
        for historyIP in historyIPs:
            country = getCountry(historyIP)
            if country is not None:
                print('{} is from {}'.format(historyIP,country))

    newLink = links[random.randint(0,len(links)-1)].attrs['href']
    links = getLinks(newLink)
    
    
위키피디아의 개정한 유저의 ip로 국가 지역을 확인
